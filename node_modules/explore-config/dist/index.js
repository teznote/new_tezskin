var k=Object.create;var d=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var F=(o,n)=>{for(var r in n)d(o,r,{get:n[r],enumerable:!0})},l=(o,n,r,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let f of h(n))!C.call(o,f)&&f!==r&&d(o,f,{get:()=>n[f],enumerable:!(e=x(n,f))||e.enumerable});return o};var i=(o,n,r)=>(r=o!=null?k(v(o)):{},l(n||!o||!o.__esModule?d(r,"default",{value:o,enumerable:!0}):r,o)),P=o=>l(d({},"__esModule",{value:!0}),o);var w={};F(w,{default:()=>c});module.exports=P(w);var m=i(require("path")),u=i(require("@techor/log")),s=i(require("@techor/extend")),a=require("@techor/glob"),p=i(require("cross-import"));function c(o,n){n=(0,s.default)({keys:["config","default"],on:{found:t=>u.default.ok`**${t}** config file found`,notFound:()=>u.default.i`No **${o}** config file found`}},n);let{on:r,keys:e}=n,f;try{let t=(0,a.explorePathSync)(o,n);if(t){let g=(0,p.default)(m.default.resolve(n.cwd||"",t));for(let y of e)if(f=g[y],f)break;f||(f=g),r.found?.(t)}else r.notFound?.()}catch(t){u.default.error(t)}return f}
//# sourceMappingURL=index.js.map
